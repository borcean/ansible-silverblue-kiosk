- name: Ansible setup | Install packages
  community.general.rpm_ostree_pkg:
    name:
      - ansible-core
      - python3-psutil
    state: present

- name: Ansible setup | Ansible-refresh systemd service
  ansible.builtin.copy:
    src: ansible/{{ item.src }}
    dest: /etc/systemd/system/{{ item.dest }}
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: 'ansible_refresh_service', dest: 'ansible-refresh.service' }

- name: Ansible setup | Ansible-pull systemd service
  ansible.builtin.template:
    src: ansible/pull_service.j2
    dest: /etc/systemd/system/ansible-pull.service
    owner: root
    group: root
    mode: 0640


- name: Ansible setup | Ansible systemd timers
  ansible.builtin.template:
    src: ansible/timer.j2
    dest: "/etc/systemd/system/ansible-{{ item.key }}.timer"
    owner: root
    group: root
    mode: 0640
  with_dict: "{{ timers }}"

- name: Ansible setup | Enable ansible systemd timers
  ansible.builtin.systemd:
    name: "ansible-{{ item.key }}.timer"
    enabled: true
    masked: false
    daemon_reload: true
  with_dict: "{{ timers }}"

- name: Ansible setup | Copy ansible requirements.yml file
  ansible.builtin.copy:
    src: ansible/requirements
    dest: /root/.ansible/requirements.yml
    owner: root
    group: root
    mode: 0640
  changed_when: False

- name: Ansible setup | Check ansible install state
  ansible.builtin.shell: command -v ansible
  register: check_binary
  changed_when: false
  failed_when: false

- name: Ansible setup | Install content from ansible galaxy
  tags: ansible,ansible-setup
  command:
    cmd: ansible-galaxy "{{ item.type }}" install -r requirements.yml --"{{ item.flag }}"
  loop:
    - { type: 'collection', flag: 'upgrade' }
    - { type: 'role', flag: 'force' }
  when: 
    - check_binary.rc == 0
  changed_when: false